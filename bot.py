import logging
import asyncio
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# C·∫•u h√¨nh log
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# H√†m x·ª≠ l√Ω l·ªánh /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Xin ch√†o! T√¥i l√† TagAll Bot ü§ñ")

# H√†m main ƒë·ªÉ kh·ªüi ch·∫°y bot
async def main():
    # T·∫°o ·ª©ng d·ª•ng v·ªõi token Telegram Bot c·ªßa b·∫°n
    app = ApplicationBuilder().token("YOUR_BOT_TOKEN_HERE").build()

    # X√≥a webhook c≈© (n·∫øu c√≥)
    await app.bot.delete_webhook(drop_pending_updates=True)

    # Th√™m command handler
    app.add_handler(CommandHandler("start", start))

    # Ch·∫°y bot (l·∫Øng nghe update t·ª´ Telegram)
    logger.info("Bot ƒëang ch·∫°y...")
    await app.run_polling()

# G·ªçi h√†m main b·∫±ng asyncio
if __name__ == '__main__':
    asyncio.run(main())
